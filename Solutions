# Request 1 
SELECT distinct(MARKET)  FROM dim_customer
where customer = 'Atliq Exclusive' and region = 'APAC'
order by market;


# Request 2
with product_2020 as (
SELECT count(distinct p.product_code) as unique_products_2020 from dim_product p
join fact_sales_monthly s 
on p.product_code=s.product_code
where s.fiscal_year ='2020'),
product_2021 as 
(SELECT count(distinct p.product_code) as unique_products_2021 from dim_product p
join fact_sales_monthly s 
on p.product_code=s.product_code
where s.fiscal_year ='2021')
select unique_products_2020,unique_products_2021,Round(( (unique_products_2021-unique_products_2020)/unique_products_2020)*100 ,2)as percentage_chng from 
product_2020, product_2021;


# Request 3
with cte1 as (SELECT segment, count(distinct(product_code)) as product_count  FROM gdb023.dim_product
group by segment)
select * from cte1
order by product_count desc


# Request 4
select p1.segment,
	   p1.product_count_2020,
       p2.product_count_2021,
         p2.product_count_2021-  p1.product_count_2020 as Difference
from (

SELECT  p.segment,count(distinct(s.product_code)) as product_count_2020 
FROM gdb023.fact_sales_monthly s
join dim_product p
on p.product_code =s.product_code
where s.fiscal_year=2020
group by p.segment ) p1

Join (
SELECT  p.segment,count(distinct(s.product_code)) as product_count_2021
FROM gdb023.fact_sales_monthly s
join dim_product p
on p.product_code =s.product_code
where s.fiscal_year=2021
group by p.segment ) p2
on p1.segment=p2.segment
order by Difference desc


# Request 5
SELECT (m.product_code),p.product,(m.manufacturing_cost) FROM gdb023.fact_manufacturing_cost m
join dim_product p
on m.product_code=p.product_code
where manufacturing_cost= (select max(manufacturing_cost) from fact_manufacturing_cost)
or 
manufacturing_cost= (select min(manufacturing_cost) from fact_manufacturing_cost)
order by m.manufacturing_cost desc


# Request 6
SELECT pre.customer_code,c.customer,round(avg(pre.pre_invoice_discount_pct),4) as pc FROM gdb023.fact_pre_invoice_deductions pre
join dim_customer c 
on c.customer_code=pre.customer_code
where pre.fiscal_year=2021 and c.market='India'
group by pre.customer_code,c.customer
order by pc desc 
limit 5;


# Request 7
WITH temp_table AS (
    SELECT customer,
    monthname(date) AS months ,
    month(date) AS month_number, 
    year(date) AS year,
    (sold_quantity * gross_price)  AS gross_sales
 FROM fact_sales_monthly s JOIN
 fact_gross_price g ON s.product_code = g.product_code
 JOIN dim_customer c ON s.customer_code=c.customer_code
 WHERE customer="Atliq exclusive"
)
SELECT months,year, round(sum(gross_sales)/1000000,2) AS gross_sales_ml FROM temp_table
GROUP BY year,months
ORDER BY year,month_number;


# Request 8
WITH cte_1 AS (
  SELECT date,month(date_add(date,interval 4 month)) AS period, fiscal_year,sold_quantity 
FROM fact_sales_monthly
)
SELECT CASE 
   when period/3 <= 1 then "Q1"
   when period/3 <= 2 and period/3 > 1 then "Q2"
   when period/3 <=3 and period/3 > 2 then "Q3"
   when period/3 <=4 and period/3 > 3 then "Q4" END quarter,
 round(sum(sold_quantity)/1000000,2) as total_sold_quanity_in_ml FROM cte_1
WHERE fiscal_year = 2020
GROUP BY quarter
ORDER BY quarter asc,total_sold_quanity_in_ml DESC;


# Request 9
with cte1 as (
SELECT c.channel, 
round(sum((sold_quantity*gross_price)/1000000),2) as gross_sales_ml  
FROM gdb023.fact_sales_monthly s
join fact_gross_price gp 
on gp.product_code=s.product_code 
join dim_customer c
on c.customer_code=s.customer_code 
where s.fiscal_year=2021
group by c.channel
order by gross_sales_ml desc)
select *, round( gross_sales_ml*100/sum(gross_sales_ml) over(),2)   as percentage  from cte1 



# Request 10
with cte2 as (
with cte1 as (
SELECT concat(p.product,"(",p.variant,")") AS product ,p.product_code,p.division, sum(s.sold_quantity) as total_sold_qty
FROM gdb023.dim_product p
join fact_sales_monthly s
on p.product_code=s.product_code
where s.fiscal_year=2021
group by p.product_code,p.division,p.product
)
select *,
Dense_rank() over (partition by division  order by total_sold_qty desc) as rank_order 

from cte1)
select * from cte2
where rank_order<=3


